angular.module('app')
    .controller('AboutCtrl',function($scope, $window){
// THE FOLLOW IS JUST TESTING MATERIAL FOR TESTING PURPOSES//
        $scope.title = "This is the Title.";
        $scope.message='this is about';
        $scope.header1 = "this is header 1";
        $scope.header2 = 'this is header 2';
        $scope.header3 = 'this is header 3';
        $scope.list = [
          {name: "Single Blue"},
          {name: "Red Weapons"},
          {name: "Green Weapons & Stab Tips"},
          {name: "Archery"},
          {name: "Shields"}
        ];
        $scope.languageFilter = [];

        $scope.myFilter = function(dataArray){
          if ($scope.languageFilter.length > 0 ) {
            language = dataArray.language;
            if ($scope.languageFilter.indexOf(language) > -1) {
              return dataArray;
            }
          } else {
            return dataArray;
          }
        }
        // List add remove - If exists removes, if not adds
        $scope.clickFilter = function(filterItem){
          var addItem = true;
          for (var i = 0; i < $scope.languageFilter.length; i++) {
            if ($scope.languageFilter[i] === filterItem ) {
              addItem = false;
              $scope.languageFilter.splice(i, 1);
            }
          }
          if (addItem) {
            $scope.languageFilter.push(filterItem);
          }
        }



      $scope.codeList = [
        {syntax: "<!--...-->", language: "HTML5", def: "Defines a Comment in HTML5"},
        {syntax: "<!DOCTYPE>", language: "HTML5", def: "Defines the document type"},
        {syntax: "<a>", language: "HTML5", def: "Defines a hyperlink"},
        {syntax: "abbr", language: "HTML5", def: "Defines an abbreviation or an acronym"},
        {syntax: "<address>", language: "HTML5", def: "Defines a contact information for the author/owner of a document"},
        {syntax: "<area>", language: "HTML5", def: "Defines an area inside an image-map"},
        {syntax:"<article>", language: "HTML5", def: "Defines an article"},
        {syntax:"<aside>", language: "HTML5", def:"Defines content aside from the page content"},
        {syntax:"<b>", language: "HTML5", def: "Defines bold text" },
        {syntax: "<base>", language: "HTML5", def:"Specifies the base URL/target for all relative URLs in a document" },
        {syntax:"<bdi>" , language: "HTML5", def: "Isolates a part of text that might be formatted in a different direction from other text outside" },
        {syntax:"<bdo>", language: "HTML5", def: "overrides the current text direction" },
        {syntax: "<blockqoute>" , language: "HTML5", def: "Defines a section that is quoted from another source" },
        {syntax: "<body>", language: "HTML5", def: "defines the document's body type." },
        {syntax: "<br>", language: "HTML5", def:"Defines a single line break" },
        {syntax: "<button>", language: "HTML5", def: "Defines a clickable button" },
        {syntax: "<canvas>", language: "HTML5", def: "Used to draw graphics as you go vis scripting, Usually JavaScript" },
        {syntax: "<caption>", language: "HTML5", def: "Defines a caption"},
        {syntax: "<cite>", language: "HTML5", def: "Defines the title of a work"},
        {syntax: "<code>", language: "HTML5", def: "defines a peice of computer code" },
        {syntax: "<col>" , language: "HTML5", def: "Specifies column properties for each column within a <colgroup> element" },
        {syntax: "<colgroup>" , language: "HTML5", def: "Specifies a group of one of more columns in a table for formtting" },
        {syntax:"<datalist>", language: "HTML5", def:"Specifies a list of pre-defined options for input controls" },
        {syntax:"<dd>" , language: "HTML5", def:"Defines a description/vvalue of a term in a description list" },
        {syntax: "<del>" , language: "HTML5", def:"Defines text that has been deleted from a document" },
        {syntax:"<details>" , language: "HTML5", def:"Defines additional details that the user can view or hide" },
        {syntax:"<dfn>" , language: "HTML5", def: "Represents teh defining instance of a term" },
        {syntax: "<dialog>", language: "HTML5", def: "defines a dialog box or window"},
        {syntax: "<div>", language: "HTML5", def:"Defines a section in a document"},
        {syntax:"<dl>", language: "HTML5", def:"Defines a description list"},
        {syntax:"<dt>", language: "HTML5", def: "Defines a term/name in a description list"},
        {syntax:"<em>" , language: "HTML5", def:"Defines emphasized text"},
        {syntax:"<embed>", language: "HTML5", def:"Defines a container for an external(non-HTML) application"},
        {syntax:"<fieldset>", language: "HTML5", def:"Groups related elements in a form"},
        {syntax:"<figcaption>", language: "HTML5", def:"Defines a cpation for a <figure> element" },
        {syntax:"<figure>", language: "HTML5", def:"Specifies self-contained content"},
        {syntax:"<footer>", language: "HTML5", def:"Defines a footer for a document or section"},
        {syntax:"<form>", language: "HTML5", def:"Defines a HTML Form for user input" },
        {syntax:"<h1> to <h6>" , language: "HTML5", def:"Defines HTML headings, 1 being the largest 6 being the smallest" },
        {syntax:"<head>" , language: "HTML5", def:"Defines information about the doucment" },
        {syntax: "<header>", language: "HTML5", def:"Defines a header for the document or section"},
        {syntax: "<hr>", language: "HTML5", def:"Defines a thematic change in the content"},
        {syntax:"<html>", language: "HTML5", def:"Defines the root of an HTML document" },
        {syntax:"<i>", language: "HTML5", def:"Defines a part of text in a alertnaate voice of mood" },
        {syntax:"<iframe>", language: "HTML5", def:"Defines an inline frame" },
        {syntax: "<img>", language: "HTML5", def:"Defines an image"},
        {syntax: "<input>", language: "HTML5", def:"defines an input control" },
        {syntax: "<ins>", language: "HTML5", def:"Defubes a text thas been inserted into a doucment" },
        {syntax: "<kbd>", language: "HTML5", def: "Defines a keyboard input"},
        {syntax: "<keygen>", language: "HTML5", def: "Defines a key-pair generator field for forms"},
        {syntax: "<label>", language: "HTML5", def: "Defines a label for an <input> element"},
        {syntax: "<legend>", language: "HTML5", def: "Defines a cpation for a <fieldset> element"},
        {syntax: "<li>", language: "HTML5", def: "Defines a list item"},
        {syntax: "<link>", language: "HTML5", def: "Defines the relationship between a document and an extendernal resource, most used to link to style sheets"},
        {syntax: "<main>", language: "HTML5", def:"Specifies the amin content of a document" },
        {syntax: "<map>", language: "HTML5", def:"Defines a client-side image-map" },
        {syntax: "<mark>", language: "HTML5", def: "Defines a marked/highlighted text"},
        {syntax: "<menu>", language: "HTML5", def: "Defines a list/menu of commands"},
        {syntax: "<menuitem>", language: "HTML5", def: "Defines a command/menu item that the user can invote from a pop-up menu"},
        {syntax: "<meta>", language: "HTML5", def: "Defines a metadata about an HTML document"},
        {syntax: "<meter>", language: "HTML5", def: "Defines a sclar measurement with a known range, a gauge"},
        {syntax: "<nay>", language: "HTML5", def:"Defines navigartion links" },
        {syntax: "<noscript>", language: "HTML5", def: "defines an alternate content for suers that do not support client side scripts"},
        {syntax: "<object>", language: "HTML5", def: "Defines an embedded object"},
        {syntax: "<ol>", language: "HTML5", def: "Defines an ordered list"},
        {syntax: "<optgroup>", language: "HTML5", def: "Defines a group of related options in a drop-down list"},
        {syntax: "<option>", language: "HTML5", def:"Defines an option in a drop-down list"},
        {syntax: "p", language: "HTML5", def: "Defines a paragraph tag"},
        {syntax: "<param>", language: "HTML5", def: "Defines a parametere for an object"},
        {syntax: "<pre>", language: "HTML5", def: "Defines a preformatted text"},
        {syntax: "<progress>", language: "HTML5", def:"Represents the progress of a task" },
        {syntax: "<q>", language: "HTML5", def: "Defines a short quotation"},
        {syntax: "<rp>", language: "HTML5", def: "Defines what tp show in browsers that do not support ruby annotations"},
        {syntax: "<rt>", language: "HTML5", def: "Defines an explantation/pronunciation of characters, used commonly for East Asian typography"},
        {syntax: "<ruby>", language: "HTML5", def: "Defines a ruby annotation, used for East asian typography"},
        {syntax: "<s>", language: "HTML5", def: "Defines text that is no longer correct"},
        {syntax: "<samp>", language: "HTML5", def:"Defines sample output from a computer program" },
        {syntax: "<script", language: "HTML5", def: "Defines a client-side script"},
        {syntax: "<section>", language: "HTML5", def: "Defines a section in a document"},
        {syntax: "<select>", language: "HTML5", def: "Defines a drop-down list"},
        {syntax: "<small>", language: "HTML5", def: "Defines smaller text"},
        {syntax: "<source>", language: "HTML5", def: "Defines multiple media resources for media lements, such as <video> and <audio>"},
        {syntax: "<span>", language: "HTML5", def: "Defines a section in a document"},
        {syntax: "<strong>", language: "HTML5", def: "Defines important text"},
        {syntax: "<style>", language: "HTML5", def: "Defines style information for a document"},
        {syntax: "<sub>", language: "HTML5", def: "Defines a subscripted text"},
        {syntax: "<summary>", language: "HTML5", def: "Defines a visable heading for a <details> element"},
        {syntax: "<sup>", language: "HTML5", def: "Defines superscripted text"},
        {syntax: "<table>", language: "HTML5", def: "Defines a table"},
        {syntax: "<tbody>", language: "HTML5", def: "Groups the body content in a table"},
        {syntax: "<td>", language: "HTML5", def: "Defines a cell in a table"},
        {syntax: "<textarea>", language: "HTML5", def: "Defines multiline input control (text area)"},
        {syntax: "<tfoot>", language: "HTML5", def: "Groups the footer content in a table"},
        {syntax: "<th>", language: "HTML5", def: "Defines a header cell in a table"},
        {syntax: "<thead>", language: "HTML5", def: "Groups the header content in a table"},
        {syntax: "<time>", language: "HTML5", def: "Defines a date/time"},
        {syntax: "<tr>", language: "HTML5", def: "Dfines a row in a table"},
        {syntax: "<track>", language: "HTML5", def: "Defines text tracks for media elements like <video> and <audio>"},
        {syntax: "<u>", language: "HTML5", def: "Defines text that should be stylistically different from normal text"},
        {syntax: "<ul>", language: "HTML5", def: "Defines an unordered list"},
        {syntax: "<var>", language: "HTML5", def: "Defines a Varibable"},
        {syntax: "<video>", language: "HTML5", def: "Defines a video or movies"},
        {syntax: "<wbr>", language: "HTML5", def: "Defines a possible line-break"},
// =====================================================================================================================================================================
// =================================================== START OF THE CSS STYLES HERE END OF THE HTML ABOVE===============================================================
// =====================================================================================================================================================================
      {syntax: "color", language:"CSS", def:"Sets the color of text"},
      {syntax: "opacity", language:"CSS", def:"Sets the opacity level for an element"},
      {syntax: "background", language:"CSS", def:"	A shorthand property for setting all the background properties in one declaration"},
      {syntax: "background-attachment", language:"CSS", def:"attachment	Sets whether a background image is fixed or scrolls with the rest of the page"},
      {syntax: "background-blend-mode", language:"CSS", def:"Specifies the blending mode of each background layer (color/image)"},
      {syntax: "background-color", language:"CSS", def:"Specifies the background color of an element"},
      {syntax: "background-position", language:"CSS", def:"Specifies the position of a background image"},
      {syntax: "background-repeat", language:"CSS", def:"	Sets how a background image will be repeated"},
      {syntax: "background-clip", language:"CSS", def:"	Specifies the painting area of the background"},
      {syntax: "background-origin", language:"CSS", def:"Specifies where the background image(s) is/are positioned"},
      {syntax: "background-size", language:"CSS", def:"	Specifies the size of the background image(s)"},
      {syntax: "border", language:"CSS", def:"Sets all the border properties in one declaration"},
      {syntax: "border-bottom", language:"CSS", def:"	Sets all the bottom border properties in one declaration"},
      {syntax: "border-bottom-color", language:"CSS", def:"Sets the color of the bottom border"},
      {syntax: "border-bottom-left-radius", language:"CSS", def:"	Defines the shape of the border of the bottom-left corner"},
      {syntax: "border-bottom-right-radius", language:"CSS", def:"Defines the shape of the border of the bottom-right corner"},
      {syntax: "border-bottom-style", language:"CSS", def:"Sets the style of the bottom border"},
      {syntax: "border-bottom-width", language:"CSS", def:"	Sets the width of the bottom border"},
      {syntax: "border-color", language:"CSS", def:"Sets the color of the four borders"},
      {syntax: "border-image", language:"CSS", def:"A shorthand property for setting all the border-image-* properties"},
      {syntax: "border-image-outset", language:"CSS", def:""},
      {syntax: "", language:"CSS", def:"	Specifies the amount by which the border image area extends beyond the border box"},
      {syntax: "border-image-repeat", language:"CSS", def:"	Specifies whether the border image should be repeated, rounded or stretched"},
      {syntax: "border-image-slice", language:"CSS", def:"Specifies how to slice the border image"},
      {syntax: "border-image-source", language:"CSS", def:"Specifies the path to the image to be used as a border"},
      {syntax: "border-image-width", language:"CSS", def:"Specifies the widths of the image-border"},
      {syntax: "border-left", language:"CSS", def:"Sets all the left border properties in one declaration"},
      {syntax: "border-left-color", language:"CSS", def:"Sets the color of the left border"},
      {syntax: "border-left-style", language:"CSS", def:"	Sets the style of the left border"},
      {syntax: "border-left-width", language:"CSS", def:"Sets the width of the left border"},
      {syntax: "border-radius", language:"CSS", def:"A shorthand property for setting all the four border-*-radius properties"},
      {syntax: "border-right", language:"CSS", def:"	Sets all the right border properties in one declaration"},
      {syntax: "border-right-color	", language:"CSS", def:"Sets the color of the right border"},
      {syntax: "border-right-style", language:"CSS", def:"Sets the style of the right border"},
      {syntax: "border-right-width", language:"CSS", def:""},
      {syntax: "border-style", language:"CSS", def:"	Sets the style of the four borders"},
      {syntax: "border-top", language:"CSS", def:"	Sets all the top border properties in one declaration"},
      {syntax: "border-top-color", language:"CSS", def:"Sets the color of the top border"},
      {syntax: "border-top-left-radius", language:"CSS", def:"Defines the shape of the border of the top-left corner"},
      {syntax: "border-top-right-radius", language:"CSS", def:"Defines the shape of the border of the top-right corner"},
      {syntax: "border-top-style", language:"CSS", def:"Sets the style of the top border"},
      {syntax: "border-top-width", language:"CSS", def:"	Sets the width of the top border"},
      {syntax: "border-width", language:"CSS", def:"Sets the width of the four borders"},
      {syntax: "box-decoration-break", language:"CSS", def:"Sets the behaviour of the background and border of an element at page-break, or, for in-line elements, at line-break."},
      {syntax: "box-shadow", language:"CSS", def:"Attaches one or more drop-shadows to the box"},
      {syntax: "bottom", language:"CSS", def:"	Specifies the bottom position of a positioned element"},
      {syntax: "clear", language:"CSS", def:"Specifies which sides of an element where other floating elements are not allowed"},
      {syntax: "clip", language:"CSS", def:"Clips an absolutely positioned element"},
      {syntax: "display", language:"CSS", def:"Specifies how a certain HTML element should be displayed"},
      {syntax: "float", language:"CSS", def:"Specifies whether or not a box should float"},
      {syntax: "height", language:"CSS", def:"Sets the height of an element"},
      {syntax: "left", language:"CSS", def:"Specifies the left position of a positioned element"},
      {syntax: "margin", language:"CSS", def:"	Sets all the margin properties in one declaration"},
      {syntax: "margin-bottom", language:"CSS", def:"Sets the bottom margin of an element"},
      {syntax: "margin-left", language:"CSS", def:"Sets the left margin of an element"},
      {syntax: "margin-right", language:"CSS", def:"Sets the right margin of an element"},
      {syntax: "margin-top", language:"CSS", def:"Sets the top margin of an element"},
      {syntax: "max-height", language:"CSS", def:"Sets the maximum height of an element"},
      {syntax: "max-width", language:"CSS", def:"Sets the maximum width of an element"},
      {syntax: "min-height", language:"CSS", def:"Sets the minimum height of an element"},
      {syntax: "min-width", language:"CSS", def:"Sets the minimum width of an element"},
      {syntax: "overflow", language:"CSS", def:"Specifies what happens if content overflows an element's box"},
      {syntax: "overflow-x", language:"CSS", def:"Specifies whether or not to clip the left/right edges of the content, if it overflows the element's content area"},
      {syntax: "overflow-y", language:"CSS", def:"Specifies whether or not to clip the top/bottom edges of the content, if it overflows the element's content area"},
      {syntax: "padding", language:"CSS", def:"Sets all the padding properties in one declaration"},
      {syntax: "padding-bottom", language:"CSS", def:"Sets the bottom padding of an element"},
      {syntax: "padding-left", language:"CSS", def:"Sets the left padding of an element"},
      {syntax: "padding-right", language:"CSS", def:"	Sets the right padding of an element"},
      {syntax: "padding-top", language:"CSS", def:"Sets the top padding of an element"},
      {syntax: "position", language:"CSS", def:"Specifies the type of positioning method used for an element (static, relative, absolute or fixed)"},
      {syntax: "right", language:"CSS", def:"Specifies the right position of a positioned element"},
      {syntax: "top", language:"CSS", def:"Specifies the top position of a positioned element"},
      {syntax: "visibility", language:"CSS", def:"Specifies whether or not an element is visible"},
      {syntax: "width", language:"CSS", def:"Sets the width of an element"},
      {syntax: "vertical-align", language:"CSS", def:"Sets the vertical alignment of an element"},
      {syntax: "z-index", language:"CSS", def:"	Sets the stack order of a positioned element"},
      {syntax: "align-content", language:"CSS", def:"Specifies the alignment between the lines inside a flexible container when the items do not use all available space"},
      {syntax: "align-items", language:"CSS", def:"Specifies the alignment for items inside a flexible container"},
      {syntax: "align-self", language:"CSS", def:"Specifies the alignment for selected items inside a flexible container"},
      {syntax: "flex", language:"CSS", def:"Specifies the length of the item, relative to the rest"},
      {syntax: "flex-basis", language:"CSS", def:"Specifies the initial length of a flexible item"},
      {syntax: "flex-direction", language:"CSS", def:"Specifies the direction of the flexible items"},
      {syntax: "flex-flow", language:"CSS", def:"A shorthand property for the flex-direction and the flex-wrap properties"},
      {syntax: "flex-grow", language:"CSS", def:"Specifies how much the item will grow relative to the rest"},
      {syntax: "flex-shrink", language:"CSS", def:"	Specifies how the item will shrink relative to the rest"},
      {syntax: "flex-wrap", language:"CSS", def:"	Specifies whether the flexible items should wrap or not"},
      {syntax: "justify-content", language:"CSS", def:"Specifies the alignment between the items inside a flexible container when the items do not use all available space"},
      {syntax: "order", language:"CSS", def:"Sets the order of the flexible item, relative to the rest"},
      {syntax: "hanging-punctuation", language:"CSS", def:"Specifies whether a punctuation character may be placed outside the line box"},
      {syntax: "hyphens", language:"CSS", def:"Sets how to split words to improve the layout of paragraphs"},
      {syntax: "letter-spacing", language:"CSS", def:"Increases or decreases the space between characters in a text"},
      {syntax: "line-break", language:"CSS", def:"Specifies how/if to break lines"},
      {syntax: "line-height", language:"CSS", def:"	Sets the line height"},
      {syntax: "overflow-wrap", language:"CSS", def:"Specifies whether or not the browser may break lines within words in order to prevent overflow (when a string is too long to fit its containing box)"},
      {syntax: "tab-size", language:"CSS", def:"	Specifies the length of the tab-character"},
      {syntax: "text-align", language:"CSS", def:"Describes how the last line of a block or a line right before a forced line break is aligned when text-align is 'justify' "},
      {syntax: "text-combine-upright", language:"CSS", def:"	Specifies the combination of multiple characters into the space of a single character"},
      {syntax: "text-indent", language:"CSS", def:"	Specifies the indentation of the first line in a text-block"},
      {syntax: "text-justify", language:"CSS", def:"Specifies the justification method used when text-align is 'justify' "},
      {syntax: "text-transform", language:"CSS", def:"	Controls the capitalization of text"},
      {syntax: "white-space", language:"CSS", def:"Specifies how white-space inside an element is handled"},
      {syntax: "word-break", language:"CSS", def:"Specifies line breaking rules for non-CJK scripts"},
      {syntax: "word-spacing", language:"CSS", def:"Increases or decreases the space between words in a text"},
      {syntax: "word-wrap", language:"CSS", def:"	Allows long, unbreakable words to be broken and wrap to the next line"},
      {syntax: "text-decoration", language:"CSS", def:"Specifies the decoration added to text"},
      {syntax: "text-decoration-color", language:"CSS", def:"Specifies the color of the text-decoration"},
      {syntax: "text-decoration-line", language:"CSS", def:"Specifies the type of line in a text-decoration"},
      {syntax: "text-decoration-style", language:"CSS", def:"Specifies the style of the line in a text decoration"},
      {syntax: "text-shadow", language:"CSS", def:"Adds shadow to text"},
      {syntax: "text-underline-position", language:"CSS", def:"Specifies the position of the underline which is set using the text-decoration property"},
      {syntax: "@font-face", language:"CSS", def:"	A rule that allows websites to download and use fonts other than the 'web-safe' fonts"},
      {syntax: "@font-feature-values", language:"CSS", def:"	Allows authors to use a common name in font-variant-alternate for feature activated differently in OpenType"},
      {syntax: "font", language:"CSS", def:"Sets all the font properties in one declaration"},
      {syntax: "font-family", language:"CSS", def:"	Specifies the font family for text"},
      {syntax: "font-feature-settings", language:"CSS", def:"Allows control over advanced typographic features in OpenType fonts"},
      {syntax: "font-kerning", language:"CSS", def:"	Controls the usage of the kerning information (how letters are spaced)"},
      {syntax: "font-language-override", language:"CSS", def:"	Controls the usage of language-specific glyphs in a typeface"},
      {syntax: "font-size", language:"CSS", def:"Specifies the font size of text"},
      {syntax: "font-size-adjust", language:"CSS", def:"	Preserves the readability of text when font fallback occurs"},
      {syntax: "font-stretch", language:"CSS", def:"Selects a normal, condensed, or expanded face from a font family"},
      {syntax: "font-style", language:"CSS", def:"	Specifies the font style for text"},
      {syntax: "font-synthesis	", language:"CSS", def:"	Controls which missing typefaces (bold or italic) may be synthesized by the browser"},
      {syntax: "font-variant", language:"CSS", def:"Specifies whether or not a text should be displayed in a small-caps font"},
      {syntax: "font-variant-alternates", language:"CSS", def:"Controls the usage of alternate glyphs associated to alternative names defined in @font-feature-values"},
      {syntax: "font-variant-caps", language:"CSS", def:"Controls the usage of alternate glyphs for capital letters"},
      {syntax: "font-variant-east-asian", language:"CSS", def:"Controls the usage of alternate glyphs for East Asian scripts (e.g Japanese and Chinese)"},
      {syntax: "font-variant-ligatures", language:"CSS", def:"	Controls which ligatures and contextual forms are used in textual content of the elements it applies to"},
      {syntax: "font-variant-numeric", language:"CSS", def:"Controls the usage of alternate glyphs for numbers, fractions, and ordinal markers"},
      {syntax: "font-variant-position", language:"CSS", def:"Controls the usage of alternate glyphs of smaller size positioned as superscript or subscript regarding the baseline of the font"},
      {syntax: "font-weight", language:"CSS", def:"Specifies the weight of a font"},
      {syntax: "direction", language:"CSS", def:"Specifies the text direction/writing direction"},
      {syntax: "text-orientation", language:"CSS", def:"Defines the orientation of the text in a line"},
      {syntax: "text-combine-upright", language:"CSS", def:"Specifies the combination of multiple characters into the space of a single character"},
      {syntax: "unicode-bidi", language:"CSS", def:"	Used together with the direction property to set or return whether the text should be overridden to support multiple languages in the same document"},
      {syntax: "border-collapse", language:"CSS", def:"Specifies whether or not table borders should be collapsed"},
      {syntax: "border-spacing", language:"CSS", def:"Specifies the distance between the borders of adjacent cells"},
      {syntax: "caption-side", language:"CSS", def:"	Specifies the placement of a table caption"},
      {syntax: "empty-cells", language:"CSS", def:"Specifies whether or not to display borders and background on empty cells in a table"},
      {syntax: "table-layout", language:"CSS", def:"Sets the layout algorithm to be used for a table"},
      {syntax: "counter-increment", language:"CSS", def:"Increments one or more counters"},
      {syntax: "list-style", language:"CSS", def:"Sets all the properties for a list in one declaration"},
      {syntax: "list-style-image", language:"CSS", def:"Specifies an image as the list-item marker"},
      {syntax: "list-style-position", language:"CSS", def:"Specifies if the list-item markers should appear inside or outside the content flow"},
      {syntax: "list-style-type", language:"CSS", def:"Specifies the type of list-item marker"},
      {syntax: "@keyframes", language:"CSS", def:"Specifies the animation code"},
      {syntax: "animation", language:"CSS", def:"A shorthand property for all the animation properties (except animation-play-state and animation-fill-mode)"},
      {syntax: "animation-delay", language:"CSS", def:"Specifies a delay for the start of an animation"},
      {syntax: "animation-direction", language:"CSS", def:"	Specifies whether or not the animation should play in reverse on alternate cycles"},
      {syntax: "animation-duration", language:"CSS", def:"Specifies how many seconds or milliseconds an animation takes to complete one cycle"},
      {syntax: "animation-fill-mode", language:"CSS", def:"	Specifies a style for the element when the animation is not playing (when it is finished, or when it has a delay)animation-iteration-count"},
      {syntax: "animation-iteration-count", language:"CSS", def:"	Specifies the number of times an animation should be played"},
      {syntax: "animation-name", language:"CSS", def:"Specifies the name of the @keyframes animationanimation-play-state"},
      {syntax: "animation-play-state", language:"CSS", def:"	Specifies whether the animation is running or paused"},
      {syntax: "animation-timing-function", language:"CSS", def:"Specifies the speed curve of an animation"},
      {syntax: "backface-visibility", language:"CSS", def:"Defines whether or not an element should be visible when not facing the screen"},
      {syntax: "perspective", language:"CSS", def:"Specifies the perspective on how 3D elements are viewed"},
      {syntax: "perspective-origin", language:"CSS", def:"Specifies the bottom position of 3D elements"},
      {syntax: "transform", language:"CSS", def:"Applies a 2D or 3D transformation to an element"},
      {syntax: "transform-origin", language:"CSS", def:"Allows you to change the position on transformed elements"},
      {syntax: "transform-style", language:"CSS", def:"Specifies how nested elements are rendered in 3D space"},
      {syntax: "transition", language:"CSS", def:"A shorthand property for setting the four transition properties"},
      {syntax: "transition-property", language:"CSS", def:"Specifies the name of the CSS property the transition effect is for"},
      {syntax: "transition-duration", language:"CSS", def:"	Specifies how many seconds or milliseconds a transition effect takes to complete"},
      {syntax: "transition-timing-function", language:"CSS", def:"Specifies the speed curve of the transition effect"},
      {syntax: "transition-delay", language:"CSS", def:"Specifies when the transition effect will start"},
      {syntax: "box-sizing", language:"CSS", def:"Tells the browser what the sizing properties (width and height) should include"},
      {syntax: "content", language:"CSS", def:"Used with the :before and :after pseudo-elements, to insert generated content"},
      {syntax: "cursor", language:"CSS", def:"Specifies the type of cursor to be displayed"},
      {syntax: "ime-mode", language:"CSS", def:"Controls the state of the input method editor for text fields"},
      {syntax: "nav-down", language:"CSS", def:"Specifies where to navigate when using the arrow-down navigation key"},
      {syntax: "nav-index", language:"CSS", def:"	Specifies the tabbing order for an element"},
      {syntax: "nav-left", language:"CSS", def:"Specifies where to navigate when using the arrow-left navigation key"},
      {syntax: "nav-right", language:"CSS", def:"	Specifies where to navigate when using the arrow-right navigation key"},
      {syntax: "nav-up", language:"CSS", def:"Specifies where to navigate when using the arrow-up navigation key"},
      {syntax: "outline", language:"CSS", def:"Sets all the outline properties in one declaration"},
      {syntax: "outline-color", language:"CSS", def:"	Sets the color of an outline"},
      {syntax: "outline-offset", language:"CSS", def:"	Offsets an outline, and draws it beyond the border edge"},
      {syntax: "outline-style", language:"CSS", def:"Sets the width of an outline"},
      {syntax: "resize", language:"CSS", def:"Specifies whether or not an element is resizable by the user"},
      {syntax: "text-overflow", language:"CSS", def:"Specifies what should happen when text overflows the containing element"},
      {syntax: "break-after", language:"CSS", def:"Specifies the page-, column-, or region-break behavior after the generated box"},
      {syntax: "break-before", language:"CSS", def:"Specifies the page-, column-, or region-break behavior before the generated box"},
      {syntax: "break-inside", language:"CSS", def:"Specifies the page-, column-, or region-break behavior inside the generated box"},
      {syntax: "column-count", language:"CSS", def:"Specifies the number of columns an element should be divided into"},
      {syntax: "column-fill", language:"CSS", def:"Specifies how to fill columns"},
      {syntax: "column-gap", language:"CSS", def:"Specifies the gap between the columns"},
      {syntax: "column-rule", language:"CSS", def:"A shorthand property for setting all the column-rule-* properties"},
      {syntax: "column-rule-color", language:"CSS", def:"Specifies the color of the rule between columns"},
      {syntax: "column-rule-style", language:"CSS", def:"	Specifies the style of the rule between columns"},
      {syntax: "column-rule-width", language:"CSS", def:"Specifies the width of the rule between columns"},
      {syntax: "column-span", language:"CSS", def:"	Specifies how many columns an element should span across"},
      {syntax: "column-width", language:"CSS", def:"Specifies the width of the columns"},
      {syntax: "columns", language:"CSS", def:"A shorthand property for setting column-width and column-count"},
      {syntax: "widows", language:"CSS", def:"Sets the minimum number of lines that must be left at the top of a page when a page break occurs inside an element"},
      {syntax: "orphans", language:"CSS", def:"	Sets the minimum number of lines that must be left at the bottom of a page when a page break occurs inside an element"},
      {syntax: "page-break-after", language:"CSS", def:"Sets the page-breaking behavior after an element"},
      {syntax: "page-break-before", language:"CSS", def:"	Sets the page-breaking behavior before an element"},
      {syntax: "page-break-inside", language:"CSS", def:"	Sets the page-breaking behavior inside an element"},
      {syntax: "marks", language:"CSS", def:"Adds crop and/or cross marks to the document"},
      {syntax: "quotes", language:"CSS", def:"	Sets the type of quotation marks for embedded quotations"},
      {syntax: "filter", language:"CSS", def:"Defines effects (e.g. blurring or color shifting) on an element before the element is displayed"},
      {syntax: "image-orientation", language:"CSS", def:"	Specifies a rotation in the right or clockwise direction that a user agent applies to an image (This property is likely going to be deprecated and its functionality moved to HTML)"},
      {syntax: "image-rendering", language:"CSS", def:"Gives a hint to the browser about what aspects of an image are most important to preserve when the image is scaled"},
      {syntax: "image-resolution", language:"CSS", def:"Specifies the intrinsic resolution of all raster images used in/on the element"},
      {syntax: "object-fit", language:"CSS", def:"	Specifies how the contents of a replaced element should be fitted to the box established by its used height and width"},
      {syntax: "object-position", language:"CSS", def:"Specifies the alignment of the replaced element inside its box"},
      {syntax: "mark", language:"CSS", def:"A shorthand property for setting the mark-before and mark-after properties"},
      {syntax: "mark-after", language:"CSS", def:"Allows named markers to be attached to the audio stream"},
      {syntax: "mark-before", language:"CSS", def:"Allows named markers to be attached to the audio stream"},
      {syntax: "phonemes", language:"CSS", def:"	Specifies a phonetic pronunciation for the text contained by the corresponding element"},
      {syntax: "rest", language:"CSS", def:"	A shorthand property for setting the rest-before and rest-after properties"},
      {syntax: "rest-after", language:"CSS", def:"Specifies a rest or prosodic boundary to be observed after speaking an element's content"},
      {syntax: "rest-before", language:"CSS", def:"	Specifies a rest or prosodic boundary to be observed before speaking an element's content"},
      {syntax: "voice-balance", language:"CSS", def:"Specifies the balance between left and right channels"},
      {syntax: "voice-duration", language:"CSS", def:"Specifies how long it should take to render the selected element's content"},
      {syntax: "voice-pitch", language:"CSS", def:"	Specifies the average pitch (a frequency) of the speaking voice"},
      {syntax: "voice-pitch-range", language:"CSS", def:"	Specifies variation in average pitch"},
      {syntax: "voice-rate", language:"CSS", def:"	Controls the speaking rate"},
      {syntax: "voice-stress", language:"CSS", def:"Indicates the strength of emphasis to be applied"},
      {syntax: "voice-volume", language:"CSS", def:"Refers to the amplitude of the waveform output by the speech synthesises"},
      {syntax: "marquee-direction", language:"CSS", def:"Sets the direction of the moving content"},
      {syntax: "marquee-play-count", language:"CSS", def:"Sets how many times the content move"},
      {syntax: "marquee-speed", language:"CSS", def:"Sets how fast the content scrolls"},
      {syntax: "marquee-style", language:"CSS", def:"	Sets the style of the moving content"},
//========================================================================================================================================================================================================
//================================================================== HERE STARTS THE JAVASCRIPT LIST BELOW CSS ENDS ABOVE=================================================================================
//========================================================================================================================================================================================================
      {syntax: "this", language:"JavaScript", def:"The this keyword refers to the function's execution context."},
      {syntax: "function", language:"JavaScript", def:"The function keyword defines a function expression."},
      {syntax: "class", language:"JavaScript", def:"The class keyword defines a class expression."},
      {syntax: "function*", language:"JavaScript", def:"The function* keyword defines a generator function expression."},
      {syntax: "yield", language:"JavaScript", def:"Pause and resume a generator function."},
      {syntax: "yield*", language:"JavaScript", def:"Delegate to another generator function or iterable object."},
      {syntax: "[]", language:"JavaScript", def:"Array initializer/literal syntax."},
      {syntax: "{}", language:"JavaScript", def:"Object initializer/literal syntax."},
      {syntax: "/ab+c/i", language:"JavaScript", def:"Regular expression literal syntax"},
      {syntax: "( )", language:"JavaScript", def:"Grouping operator."},
      {syntax: "Property accessors", language:"JavaScript", def:"Member operators provide access to a property or method of an object (object.property and object['propert'])"},
      {syntax: "new", language:"JavaScript", def:"The new operator creates an instance of a constructor."},
      {syntax: "new.target", language:"JavaScript", def:"In constructors, new.target refers to the constructor that was invoked by new."},
      {syntax: "super", language:"JavaScript", def:"The super keyword calls the parent constructor."},
      {syntax: "..obj", language:"JavaScript", def:"The spread operator allows an expression to be expanded in places where multiple arguments (for function calls) or multiple elements (for array literals) are expected."},
      {syntax: "A++", language:"JavaScript", def:"Postfix increment operator."},
      {syntax: "A--", language:"JavaScript", def:"Postfix decrement operator."},
      {syntax: "++A", language:"JavaScript", def:"Prefix increment operator."},
      {syntax: "--A", language:"JavaScript", def:"Prefix decrement operator."},
      {syntax: "delete", language:"JavaScript", def:"The delete operator deletes a property from an object"},
      {syntax: "void", language:"JavaScript", def:"The void operator discards an expression's return value."},
      {syntax: "typeof", language:"JavaScript", def:"The typeof operator determines the type of a given object."},
      {syntax: "+", language:"JavaScript", def:"The addition operator, also the unary plus operator converts its operand to Number type"},
      {syntax: "-", language:"JavaScript", def:"The unary negation operator converts its operand to Number type and then negates it."},
      {syntax: "~", language:"JavaScript", def:"The subtraction operator, also a Bitwise NOT operator."},
      {syntax: "!", language:"JavaScript", def:"Logical NOT operator."},
      {syntax: "/", language:"JavaScript", def:"Division operator."},
      {syntax: "*", language:"JavaScript", def:"Multiplication operator."},
      {syntax: "%", language:"JavaScript", def:"Remainder operator."},
      {syntax: "**", language:"JavaScript", def:"Exponentiation operator."},
      {syntax: "in", language:"JavaScript", def:"The in operator determines whether an object has a given property."},
      {syntax: "instanceof", language:"JavaScript", def:"The instanceof operator determines whether an object is an instance of another object."},
      {syntax: "<", language:"JavaScript", def:"Less than operator."},
      {syntax: ">", language:"JavaScript", def:"Greater than operator"},
      {syntax: "<=", language:"JavaScript", def:"Less than or equal operator."},
      {syntax: ">=", language:"JavaScript", def:"Greater than or equal operator."},
      {syntax: "==", language:"JavaScript", def:"Equality operator. Used to check if the boolean is 'true."},
      {syntax: "!=", language:"JavaScript", def:"Inequality operator."},
      {syntax: "===", language:"JavaScript", def:"Identity operator, also know as equal, or hard equal."},
      {syntax: "<<", language:"JavaScript", def:"Bitwise left shift operator."},
      {syntax: ">>", language:"JavaScript", def:"Bitwise right shift operator"},
      {syntax: ">>>", language:"JavaScript", def:"Bitwise unsigned right shift operator."},
      {syntax: "&", language:"JavaScript", def:"Bitwise AND."},
      {syntax: "|", language:"JavaScript", def:"Bitwise OR"},
      {syntax: "^", language:"JavaScript", def:"Bitwise XOR."},
      {syntax: "&&", language:"JavaScript", def:"Logical AND."},
      {syntax: "||", language:"JavaScript", def:"Logical OR."},
      {syntax: "(condition ? ifTrue : ifFalse)", language:"JavaScript", def:"The conditional operator returns one of two values based on the logical value of the condition."},
      {syntax: "=", language:"JavaScript", def:"Assignment operator."},
      {syntax: "*=", language:"JavaScript", def:"Multiplication assignment."},
      {syntax: "/=", language:"JavaScript", def:"Division assignment."},
      {syntax: "%=", language:"JavaScript", def:"Remainder assignment."},
      {syntax: "+=", language:"JavaScript", def:"Addition assignment."},
      {syntax: "-=", language:"JavaScript", def:"Subtraction assignment"},
      {syntax: "<<=", language:"JavaScript", def:"Left shift assignment."},
      {syntax: ">>=", language:"JavaScript", def:"Right shift assignment."},
      {syntax: ">>>=", language:"JavaScript", def:"Unsigned right shift assignment."},
      {syntax: "&=", language:"JavaScript", def:"Bitwise AND assignment."},
      {syntax: "^=", language:"JavaScript", def:"Bitwise XOR assignment."},
      {syntax: "[a, b] = [1, 2] {a, b} = {a:1, b:2}", language:"JavaScript", def:"Destructuring assignment allows you to assign the properties of an array or object to variables using syntax that looks similar to array or object literals."},
      {syntax: ",", language:"JavaScript", def:"The comma operator allows multiple expressions to be evaluated in a single statement and returns the result of the last expression."},
      {syntax: "Block", language:"JavaScript", def:"A block statement is used to group zero or more statements. The block is delimited by a pair of curly brackets."},
      {syntax: "break", language:"JavaScript", def:"Terminates the current loop, switch, or label statement and transfers program control to the statement following the terminated statement."},
      {syntax: "continue", language:"JavaScript", def:"Terminates execution of the statements in the current iteration of the current or labeled loop, and continues execution of the loop with the next iteration."},
      {syntax: "Empty", language:"JavaScript", def:"An empty statement is used to provide no statement, although the JavaScript syntax would expect one."},
      {syntax: "if...else", language:"JavaScript", def:"Executes a statement if a specified condition is true. If the condition is false, another statement can be executed."},
      {syntax: "switch", language:"JavaScript", def:"Evaluates an expression, matching the expression's value to a case clause, and executes statements associated with that case."},
      {syntax: "throw", language:"JavaScript", def:"Throws a user-defined exception."},
      {syntax: "try...catch", language:"JavaScript", def:"Marks a block of statements to try, and specifies a response, should an exception be thrown."},
      {syntax: "var", language:"JavaScript", def:"Declares a variable, optionally initializing it to a value."},
      {syntax: "let", language:"JavaScript", def:"Declares a block scope local variable, optionally initializing it to a value."},
      {syntax: "const", language:"JavaScript", def:"Declares a read-only named constant"},
      {syntax: "function", language:"JavaScript", def:"Declares a function with the specified parameters."},
      {syntax: "function*", language:"JavaScript", def:"Generators functions enable writing iterators more easily."},
      {syntax: "return", language:"JavaScript", def:"Specifies the value to be returned by a function."},
      {syntax: "class", language:"JavaScript", def:"Declares a class"},
      {syntax: "do...while", language:"JavaScript", def:"Creates a loop that executes a specified statement until the test condition evaluates to false. The condition is evaluated after executing the statement, resulting in the specified statement executing at least once"},
      {syntax: "for", language:"JavaScript", def:"Creates a loop that consists of three optional expressions, enclosed in parentheses and separated by semicolons, followed by a statement executed in the loop."},
      {syntax: "for...in", language:"JavaScript", def:"Iterates over the enumerable properties of an object, in arbitrary order. For each distinct property, statements can be executed."},
      {syntax: "for...of", language:"JavaScript", def:"Iterates over iterable objects (including arrays, array-like objects, iterators and generators), invoking a custom iteration hook with statements to be executed for the value of each distinct property."},
      {syntax: "while", language:"JavaScript", def:"Creates a loop that executes a specified statement as long as the test condition evaluates to true. The condition is evaluated before executing the statement."},
      {syntax: "debugger", language:"JavaScript", def:"Invokes any available debugging functionality. If no debugging functionality is available, this statement has no effect."},
      {syntax: "export", language:"JavaScript", def:"Used to export functions to make them available for imports in external modules, another scripts."},
      {syntax: "import", language:"JavaScript", def:"Used to import functions exported from an external module, another script."},
      {syntax: "label", language:"JavaScript", def:"Provides a statement with an identifier that you can refer to using a break or continue statement."}
//
      ]
})
